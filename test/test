#!/usr/bin/env bash
source $(dirname $0)/functions.inc
export PGOP_GLOBAL=(
  "g global"
  "a another"
)
export PGOP_MY_CONTEXT=("m mine")

function testOptions() {
  assertEquals "global"                           \
    "$(echo -e "g global\na another")"            \
    "$(__pgop_options)"

  assertEquals "my_context"                       \
    "$(echo -e "g global\na another\nm mine")"    \
    "$(__pgop_options "my_context")"
}

function testValidOption() {
  assertTrue  "with valid short"   "__pgop_valid_option -g"
  assertFalse "with invalid short" "__pgop_valid_option -x"
  assertTrue  "with valid long"    "__pgop_valid_option --global"
  assertFalse "with invalid long"  "__pgop_valid_option --invalid"
  assertTrue  "with a context"     "__pgop_valid_option --global my_context"
}

function testShortOpts() {
  export PGOP_MY_CONTEXT=("m mine")
  export PGOP_GLOBAL=(
    "f: filters:"
    "-  output"
    "q: query:"
    "b  version"
  )

  assertEquals "no context"    "f:q:b"   "$(__pgop_short_opts)"
  assertEquals "my_context"    "f:q:bm"  "$(__pgop_short_opts "my_context")"
}

function testLongOpts() {
  export PGOP_MY_CONTEXT=("m mine")
  export PGOP_GLOBAL=(
    "f: filters:"
    "-  output"
    "q: query:"
    "n  -"
    "b  version"
  )

  assertEquals "no context" "filters:,output,query:,version"      "$(__pgop_long_opts)"
  assertEquals "my_context" "filters:,output,query:,version,mine" "$(__pgop_long_opts "my_context")"
}

function testOptionType() {
  export PGOP_GLOBAL=(
    "- noarg"
    "- arg:"
    "- optarg::"
  )

  assertEquals "with noarg"  0 "$(__pgop_option_type --noarg;  echo $?)"
  assertEquals "with arg"    1 "$(__pgop_option_type --arg;    echo $?)"
  assertEquals "with optarg" 2 "$(__pgop_option_type --optarg; echo $?)"
  assertEquals "with invalid" 255 "$(__pgop_option_type --invalid; echo $?)"
}


function testShortoptToSwitch() {
  assertEquals "-x" "$(__pgop_shortopt_to_switch x)"
  assertEquals "-y" "$(__pgop_shortopt_to_switch y:)"
  assertEquals "-z" "$(__pgop_shortopt_to_switch z::)"
}

function testLongoptToSwitch() {
  assertEquals "--longx" "$(__pgop_longopt_to_switch longx)"
  assertEquals "--longy" "$(__pgop_longopt_to_switch longy:)"
  assertEquals "--longz" "$(__pgop_longopt_to_switch longz::)"
}


# load and run shUnit2
source $(dirname $0)/shunit/src/shunit2

# vim: ai ts=2 sw=2 et sts=2 ft=sh
